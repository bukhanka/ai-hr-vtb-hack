import { PrismaClient, UserRole, JobStatus } from '../src/generated/prisma';
import { hashPassword } from '../src/lib/auth';
import { seedAssessmentFrameworks } from './seeds/assessment-frameworks';

const prisma = new PrismaClient();

async function main() {
  console.log('üå± –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');

  // –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
  const adminPassword = await hashPassword('admin123456');
  const admin = await prisma.user.upsert({
    where: { email: 'admin@vtbhack.ru' },
    update: {},
    create: {
      email: 'admin@vtbhack.ru',
      password: adminPassword,
      firstName: '–°–∏—Å—Ç–µ–º–Ω—ã–π',
      lastName: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
      phone: '+7 (999) 000-01-01',
      role: UserRole.ADMIN,
    },
  });

  console.log('‚úÖ –°–æ–∑–¥–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:', admin.email);

  // –°–æ–∑–¥–∞–µ–º HR —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤
  const hrPassword = await hashPassword('hr123456');
  
  const hr1 = await prisma.user.upsert({
    where: { email: 'hr1@vtbhack.ru' },
    update: {},
    create: {
      email: 'hr1@vtbhack.ru',
      password: hrPassword,
      firstName: '–ê–Ω–Ω–∞',
      lastName: '–†–µ–∫—Ä—É—Ç–µ—Ä–æ–≤–∞',
      phone: '+7 (999) 000-02-01',
      role: UserRole.HR,
    },
  });

  const hr2 = await prisma.user.upsert({
    where: { email: 'hr2@vtbhack.ru' },
    update: {},
    create: {
      email: 'hr2@vtbhack.ru',
      password: hrPassword,
      firstName: '–ú–∏—Ö–∞–∏–ª',
      lastName: '–ö–∞–¥—Ä–æ–≤—ã–π',
      phone: '+7 (999) 000-02-02',
      role: UserRole.HR,
    },
  });

  console.log('‚úÖ –°–æ–∑–¥–∞–Ω—ã HR —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã:', hr1.email, hr2.email);

  // –°–æ–∑–¥–∞–µ–º —Å–æ–∏—Å–∫–∞—Ç–µ–ª–µ–π
  const applicantPassword = await hashPassword('applicant123456');
  
  const applicants = [];
  
  const applicant1 = await prisma.user.upsert({
    where: { email: 'applicant1@example.com' },
    update: {},
    create: {
      email: 'applicant1@example.com',
      password: applicantPassword,
      firstName: '–ò–≤–∞–Ω',
      lastName: '–ü–µ—Ç—Ä–æ–≤',
      phone: '+7 (999) 000-03-01',
      role: UserRole.APPLICANT,
    },
  });
  applicants.push(applicant1);

  const applicant2 = await prisma.user.upsert({
    where: { email: 'applicant2@example.com' },
    update: {},
    create: {
      email: 'applicant2@example.com',
      password: applicantPassword,
      firstName: '–ú–∞—Ä–∏—è',
      lastName: '–°–∏–¥–æ—Ä–æ–≤–∞',
      phone: '+7 (999) 000-03-02',
      role: UserRole.APPLICANT,
    },
  });
  applicants.push(applicant2);

  const applicant3 = await prisma.user.upsert({
    where: { email: 'applicant3@example.com' },
    update: {},
    create: {
      email: 'applicant3@example.com',
      password: applicantPassword,
      firstName: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä',
      lastName: '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤',
      phone: '+7 (999) 000-03-03',
      role: UserRole.APPLICANT,
    },
  });
  applicants.push(applicant3);

  const applicant4 = await prisma.user.upsert({
    where: { email: 'applicant4@example.com' },
    update: {},
    create: {
      email: 'applicant4@example.com',
      password: applicantPassword,
      firstName: '–ï–ª–µ–Ω–∞',
      lastName: '–î–∏–∑–∞–π–Ω–µ—Ä–æ–≤–∞',
      phone: '+7 (999) 000-03-04',
      role: UserRole.APPLICANT,
    },
  });
  applicants.push(applicant4);

  const applicant5 = await prisma.user.upsert({
    where: { email: 'applicant5@example.com' },
    update: {},
    create: {
      email: 'applicant5@example.com',
      password: applicantPassword,
      firstName: '–î–º–∏—Ç—Ä–∏–π',
      lastName: '–ê–Ω–∞–ª–∏—Ç–∏–∫–æ–≤',
      phone: '+7 (999) 000-03-05',
      role: UserRole.APPLICANT,
    },
  });
  applicants.push(applicant5);

  console.log('‚úÖ –°–æ–∑–¥–∞–Ω—ã —Å–æ–∏—Å–∫–∞—Ç–µ–ª–∏:', applicants.map(a => a.email).join(', '));

  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏
  const job1 = await prisma.job.create({
    data: {
      title: 'Senior Frontend Developer',
      description: '–ú—ã –∏—â–µ–º –æ–ø—ã—Ç–Ω–æ–≥–æ Frontend —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã –Ω–∞–¥ –≤—ã—Å–æ–∫–æ–Ω–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º–∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏.',
      requirements: '–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å React/Next.js –æ—Ç 3 –ª–µ—Ç, –∑–Ω–∞–Ω–∏–µ TypeScript, –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å REST API',
      skills: ['React', 'Next.js', 'TypeScript', 'CSS', 'JavaScript', 'HTML'],
      experience: '3+ –ª–µ—Ç',
      salary: '150 000 - 250 000 —Ä—É–±.',
      status: JobStatus.ACTIVE,
      creatorId: hr1.id,
    },
  });

  const job2 = await prisma.job.create({
    data: {
      title: 'Backend Developer (Python)',
      description: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π —á–∞—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ Python.',
      requirements: '–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å Python/Django –æ—Ç 2 –ª–µ—Ç, –∑–Ω–∞–Ω–∏–µ SQL, –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å API',
      skills: ['Python', 'Django', 'PostgreSQL', 'Redis', 'Docker'],
      experience: '2+ –ª–µ—Ç',
      salary: '120 000 - 200 000 —Ä—É–±.',
      status: JobStatus.ACTIVE,
      creatorId: hr2.id,
    },
  });

  const job3 = await prisma.job.create({
    data: {
      title: 'UX/UI Designer',
      description: '–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π.',
      requirements: '–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å Figma, –∑–Ω–∞–Ω–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ UX/UI –¥–∏–∑–∞–π–Ω–∞, –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ',
      skills: ['Figma', 'Sketch', 'Adobe XD', 'Prototyping', 'User Research'],
      experience: '2+ –ª–µ—Ç',
      salary: '100 000 - 180 000 —Ä—É–±.',
      status: JobStatus.ACTIVE,
      creatorId: hr1.id,
    },
  });

  console.log('‚úÖ –°–æ–∑–¥–∞–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏:', job1.title, job2.title, job3.title);

  // –°–æ–∑–¥–∞–µ–º —Ä–µ–∑—é–º–µ –¥–ª—è —Å–æ–∏—Å–∫–∞—Ç–µ–ª–µ–π
  await prisma.resume.create({
    data: {
      fileName: 'ivan_petrov_resume.pdf',
      filePath: '/uploads/resumes/ivan_petrov_resume.pdf',
      content: '–û–ø—ã—Ç–Ω—ã–π Frontend —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —Å 4 –≥–æ–¥–∞–º–∏ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞ —Ä–∞–±–æ—Ç—ã —Å React –∏ Next.js.',
      skills: ['React', 'Next.js', 'TypeScript', 'Node.js', 'CSS'],
      experience: 4,
      education: '–ú–ì–¢–£ –∏–º. –ë–∞—É–º–∞–Ω–∞, –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ –∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞',
      applicantId: applicant1.id,
    },
  });

  await prisma.resume.create({
    data: {
      fileName: 'maria_sidorova_resume.pdf',
      filePath: '/uploads/resumes/maria_sidorova_resume.pdf',
      content: 'Backend —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —Å –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã –Ω–∞ Python –∏ Django.',
      skills: ['Python', 'Django', 'PostgreSQL', 'Docker'],
      experience: 3,
      education: '–°–ü–±–ì–£, –ü—Ä–∏–∫–ª–∞–¥–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞',
      applicantId: applicant2.id,
    },
  });

  await prisma.resume.create({
    data: {
      fileName: 'alexander_programmer_resume.pdf',
      filePath: '/uploads/resumes/alexander_programmer_resume.pdf',
      content: 'Fullstack —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —Å –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã –∫–∞–∫ —Å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º, —Ç–∞–∫ –∏ —Å –±—ç–∫–µ–Ω–¥–æ–º.',
      skills: ['React', 'Node.js', 'Python', 'PostgreSQL', 'Docker'],
      experience: 5,
      education: '–ú–ì–£, –§–∞–∫—É–ª—å—Ç–µ—Ç –í–ú–ö',
      applicantId: applicant3.id,
    },
  });

  await prisma.resume.create({
    data: {
      fileName: 'elena_designer_resume.pdf',
      filePath: '/uploads/resumes/elena_designer_resume.pdf',
      content: 'UX/UI –¥–∏–∑–∞–π–Ω–µ—Ä —Å –æ–ø—ã—Ç–æ–º —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö –∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π.',
      skills: ['Figma', 'Sketch', 'Adobe Creative Suite', 'Prototyping'],
      experience: 3,
      education: '–ú–ì–•–ü–ê –∏–º. –°—Ç—Ä–æ–≥–∞–Ω–æ–≤–∞, –î–∏–∑–∞–π–Ω',
      applicantId: applicant4.id,
    },
  });

  await prisma.resume.create({
    data: {
      fileName: 'dmitry_analyst_resume.pdf',
      filePath: '/uploads/resumes/dmitry_analyst_resume.pdf',
      content: '–ê–Ω–∞–ª–∏—Ç–∏–∫ –¥–∞–Ω–Ω—ã—Ö —Å –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã —Å –±–æ–ª—å—à–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏ –º–∞—à–∏–Ω–Ω—ã–º –æ–±—É—á–µ–Ω–∏–µ–º.',
      skills: ['Python', 'SQL', 'Tableau', 'Machine Learning', 'Statistics'],
      experience: 2,
      education: '–ù–ò–£ –í–®–≠, –ü—Ä–∏–∫–ª–∞–¥–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞',
      applicantId: applicant5.id,
    },
  });

  console.log('‚úÖ –°–æ–∑–¥–∞–Ω—ã —Ä–µ–∑—é–º–µ –¥–ª—è —Å–æ–∏—Å–∫–∞—Ç–µ–ª–µ–π');

  // –°–æ–∑–¥–∞–µ–º Assessment Frameworks
  await seedAssessmentFrameworks(admin.id);

  // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –≤–∞–∫–∞–Ω—Å–∏–∏ –∫ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫—É Tech Interview
  const techFramework = await prisma.assessmentFramework.findFirst({
    where: { name: 'Tech Interview', isActive: true }
  });

  if (techFramework) {
    await prisma.job.updateMany({
      where: { id: { in: [job1.id, job2.id] } },
      data: { assessmentFrameworkId: techFramework.id }
    });
    console.log('‚úÖ –ü—Ä–∏–≤—è–∑–∞–Ω—ã —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –∫ Tech Interview —Ñ—Ä–µ–π–º–≤–æ—Ä–∫—É');
  }

  console.log(`
üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞!

–¢–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã:
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ –†–æ–ª—å        ‚îÇ Email              ‚îÇ –ü–∞—Ä–æ–ª—å       ‚îÇ –ò–º—è        ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ ADMIN       ‚îÇ admin@vtbhack.ru   ‚îÇ admin123456  ‚îÇ –ê–¥–º–∏–Ω      ‚îÇ
‚îÇ HR          ‚îÇ hr1@vtbhack.ru     ‚îÇ hr123456     ‚îÇ –ê–Ω–Ω–∞       ‚îÇ
‚îÇ HR          ‚îÇ hr2@vtbhack.ru     ‚îÇ hr123456     ‚îÇ –ú–∏—Ö–∞–∏–ª     ‚îÇ
‚îÇ APPLICANT   ‚îÇ applicant1@ex...   ‚îÇ applicant... ‚îÇ –ò–≤–∞–Ω       ‚îÇ
‚îÇ APPLICANT   ‚îÇ applicant2@ex...   ‚îÇ applicant... ‚îÇ –ú–∞—Ä–∏—è      ‚îÇ
‚îÇ APPLICANT   ‚îÇ applicant3@ex...   ‚îÇ applicant... ‚îÇ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä  ‚îÇ
‚îÇ APPLICANT   ‚îÇ applicant4@ex...   ‚îÇ applicant... ‚îÇ –ï–ª–µ–Ω–∞      ‚îÇ
‚îÇ APPLICANT   ‚îÇ applicant5@ex...   ‚îÇ applicant... ‚îÇ –î–º–∏—Ç—Ä–∏–π    ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

–°–æ–∑–¥–∞–Ω–æ:
‚Ä¢ ${applicants.length} —Å–æ–∏—Å–∫–∞—Ç–µ–ª–µ–π
‚Ä¢ 2 HR —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞
‚Ä¢ 1 –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
‚Ä¢ 3 –∞–∫—Ç–∏–≤–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏
‚Ä¢ 5 —Ä–µ–∑—é–º–µ
‚Ä¢ 2 Assessment Frameworks (Tech Interview, Sales Interview)
  `);
}

main()
  .then(async () => {
    await prisma.$disconnect();
  })
  .catch(async (e) => {
    console.error(e);
    await prisma.$disconnect();
    process.exit(1);
  });